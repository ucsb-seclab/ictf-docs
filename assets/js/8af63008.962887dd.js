"use strict";(self.webpackChunkictf_docs=self.webpackChunkictf_docs||[]).push([[991],{6179:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var t=s(4848),r=s(8453);const i={},o=void 0,a={id:"challenges/stop-the-model-thief/solution.py",title:"solution.py",description:"",source:"@site/docs/challenges/stop-the-model-thief/solution.py.mdx",sourceDirName:"challenges/stop-the-model-thief",slug:"/challenges/stop-the-model-thief/solution.py",permalink:"/ictf-docs/challenges/stop-the-model-thief/solution.py",draft:!1,unlisted:!1,editUrl:"https://github.com/ucsb-seclab/ictf-docs/tree/main/docs/challenges/stop-the-model-thief/solution.py.mdx",tags:[],version:"current",frontMatter:{},sidebar:"challenges",previous:{title:"Stop the model thief!",permalink:"/ictf-docs/challenges/stop-the-model-thief/"},next:{title:"Stop the spammer!",permalink:"/ictf-docs/challenges/stop-the-spammer/"}},c={},l=[];function u(e){const n={code:"code",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"import imagehash\r\nfrom PIL import Image\r\nfrom tqdm import tqdm\r\nimport numpy as np\r\nfrom collections import Counter\r\nimport os\r\n\r\n# read the data files\r\nquery_images = np.load(os.path.join('src','model_queries.npy'))\r\n\r\nfp = open(os.path.join('src', 'user_query_indices.txt'), 'r')\r\nuser_query_indices = {}\r\n\r\n# each line in the file is a user id (first line: user-id:0, second line, user-id:1...)\r\nfor ii, l in enumerate(fp.readlines()):\r\n    items = l.split(',')\r\n    user_query_indices[ii] = np.asarray([int(i) for i in items])\r\n\r\n\r\n# take the perceptual hash of each item to find near duplicates\r\nall_hashes = []\r\nfor im in tqdm(query_images):\r\n    img = Image.fromarray(im.astype(np.uint8))\r\n    h = imagehash.phash(img)\r\n    all_hashes.append(str(h))\r\nall_hashes = np.asarray(all_hashes)\r\n\r\n# find the users that issued multiple similar images, suspicious\r\nsuspicious = {}\r\nfor imh, cnt in Counter(all_hashes).most_common():\r\n    if cnt == 1:\r\n        break\r\n\r\n    image_indices = np.where(all_hashes == imh)[0]\r\n    for uid in user_query_indices:\r\n        if len(np.intersect1d(image_indices, user_query_indices[uid])):\r\n            if uid not in suspicious:\r\n                suspicious[uid] = [imh]\r\n            else:\r\n                suspicious[uid].append(imh)\r\n\r\n# find the suspicious users with the most near duplciates\r\nattackers = sorted(list(suspicious.keys()), key=lambda k: len(suspicious[k]), reverse=True)\r\n\r\n# we give as a hint that there are 20 accounts\r\nattackers = attackers[:20]\r\n\r\n# construct the flag\r\nbad_users_string = f','.join([str(i) for i in np.sort(attackers)])\r\nflag = f'ictf{{{bad_users_string}}}'\r\n\r\nfp = open('flag_sol.txt', 'w')\r\nfp.write(flag)\r\nfp.close()\n"})})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var t=s(6540);const r={},i=t.createContext(r);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);