"use strict";(self.webpackChunkictf_docs=self.webpackChunkictf_docs||[]).push([[6254],{9701:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var r=t(4848),o=t(8453);const s={},a=void 0,i={id:"challenges/tensormania/solution.py",title:"solution.py",description:"",source:"@site/docs/challenges/tensormania/solution.py.mdx",sourceDirName:"challenges/tensormania",slug:"/challenges/tensormania/solution.py",permalink:"/ictf-docs/challenges/tensormania/solution.py",draft:!1,unlisted:!1,editUrl:"https://github.com/ucsb-seclab/ictf-docs/tree/main/docs/challenges/tensormania/solution.py.mdx",tags:[],version:"current",frontMatter:{},sidebar:"challenges",previous:{title:"Tensormania",permalink:"/ictf-docs/challenges/tensormania/"},next:{title:"Trendy",permalink:"/ictf-docs/challenges/trendy/"}},c={},l=[];function p(n){const e={code:"code",pre:"pre",...(0,o.R)(),...n.components};return(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:'import dill\r\nimport numpy as np\r\n\r\nfrom torchvision import transforms\r\nfrom PIL import Image \r\n\r\nwith open("./_tensor.dill", "rb") as f:\r\n    _st = f.read()\r\n\r\n_st = dill.loads(_st)\r\n\r\n#img = torch.load(_st)\r\n\r\nnumpy_arry = _st.numpy()\r\nra = (numpy_arry[0] + 1) * 127.5\r\nra = np.clip(ra, 0,255).astype(np.uint8)\r\nimg = Image.fromarray(ra)\r\n\r\nimg.save("flag_sol.jpg")\n'})})}function m(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(p,{...n})}):p(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>a,x:()=>i});var r=t(6540);const o={},s=r.createContext(o);function a(n){const e=r.useContext(s);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:a(n.components),r.createElement(s.Provider,{value:e},n.children)}}}]);