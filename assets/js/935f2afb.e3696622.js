"use strict";(self.webpackChunkictf_docs=self.webpackChunkictf_docs||[]).push([[581],{5610:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"setup":[{"type":"link","label":"Installation","href":"/ictf-docs/setup/installation","docId":"setup/installation","unlisted":false}],"writeups":[{"type":"category","label":"AI Calculator","collapsible":true,"collapsed":true,"customProps":{"levels":["HS"]},"items":[{"type":"link","label":"exploit.py","href":"/ictf-docs/writeups/ai-calculator/exploit.py","docId":"writeups/ai-calculator/exploit.py","unlisted":false}],"href":"/ictf-docs/writeups/ai-calculator/"},{"type":"link","label":"AI Cryptic Game","href":"/ictf-docs/writeups/ai-cryptic-game/","customProps":{"levels":["HS"]},"docId":"writeups/ai-cryptic-game/index","unlisted":false},{"type":"category","label":"AI Mystical Castle","collapsible":true,"collapsed":true,"customProps":{"levels":["HS","UG"]},"items":[{"type":"link","label":"castle_problem.pddl","href":"/ictf-docs/writeups/ai-mystical-castle/castle_problem.pddl","docId":"writeups/ai-mystical-castle/castle_problem.pddl","unlisted":false},{"type":"link","label":"castle_problem_gpt.pddl","href":"/ictf-docs/writeups/ai-mystical-castle/castle_problem_gpt.pddl","docId":"writeups/ai-mystical-castle/castle_problem_gpt.pddl","unlisted":false},{"type":"link","label":"Planner Output","href":"/ictf-docs/writeups/ai-mystical-castle/planner-output","docId":"writeups/ai-mystical-castle/planner-output","unlisted":false}],"href":"/ictf-docs/writeups/ai-mystical-castle/"},{"type":"category","label":"aimazing","collapsible":true,"collapsed":true,"customProps":{"levels":["HS","UG"]},"items":[{"type":"link","label":"exploit.py","href":"/ictf-docs/writeups/aimazing/exploit.py","docId":"writeups/aimazing/exploit.py","unlisted":false}],"href":"/ictf-docs/writeups/aimazing/"},{"type":"category","label":"bytes_in_pairs","collapsible":true,"collapsed":true,"customProps":{"levels":["HS","UG"]},"items":[{"type":"link","label":"exploit.py","href":"/ictf-docs/writeups/bytes-in-pairs/exploit.py","docId":"writeups/bytes-in-pairs/exploit.py","unlisted":false}],"href":"/ictf-docs/writeups/bytes-in-pairs/"},{"type":"category","label":"CI Ninja","collapsible":true,"collapsed":true,"customProps":{"levels":["HS","UG"]},"items":[{"type":"link","label":"exploit.py","href":"/ictf-docs/writeups/ci-ninja/exploit.py","docId":"writeups/ci-ninja/exploit.py","unlisted":false},{"type":"link","label":"exploit_escape_chroot.py","href":"/ictf-docs/writeups/ci-ninja/exploit_escape_chroot.py","docId":"writeups/ci-ninja/exploit_escape_chroot.py","unlisted":false}],"href":"/ictf-docs/writeups/ci-ninja/"},{"type":"category","label":"CI Ninja 2","collapsible":true,"collapsed":true,"customProps":{"levels":["HS","UG"]},"items":[{"type":"link","label":"exploit.py","href":"/ictf-docs/writeups/ci-ninja-2/exploit.py","docId":"writeups/ci-ninja-2/exploit.py","unlisted":false}],"href":"/ictf-docs/writeups/ci-ninja-2/"},{"type":"category","label":"escape_from_markov","collapsible":true,"collapsed":true,"customProps":{"levels":["HS"]},"items":[{"type":"link","label":"exploit.py","href":"/ictf-docs/writeups/escape-from-markov/exploit.py","docId":"writeups/escape-from-markov/exploit.py","unlisted":false}],"href":"/ictf-docs/writeups/escape-from-markov/"},{"type":"category","label":"guesstimate","collapsible":true,"collapsed":true,"customProps":{"levels":["HS"]},"items":[{"type":"link","label":"exploit.py","href":"/ictf-docs/writeups/guesstimate/exploit.py","docId":"writeups/guesstimate/exploit.py","unlisted":false}],"href":"/ictf-docs/writeups/guesstimate/"},{"type":"link","label":"Lost in Translation","href":"/ictf-docs/writeups/lost-in-translation/","customProps":{"levels":["HS"]},"docId":"writeups/lost-in-translation/index","unlisted":false},{"type":"link","label":"max_64","href":"/ictf-docs/writeups/max-64/","customProps":{"levels":["HS"]},"docId":"writeups/max-64/index","unlisted":false},{"type":"link","label":"parakeet","href":"/ictf-docs/writeups/parakeet/","customProps":{"levels":["HS"]},"docId":"writeups/parakeet/index","unlisted":false},{"type":"link","label":"parakeet_v2","href":"/ictf-docs/writeups/parakeet-v2/","customProps":{"levels":["HS"]},"docId":"writeups/parakeet-v2/index","unlisted":false},{"type":"category","label":"Stop the spammer!","collapsible":true,"collapsed":true,"customProps":{"levels":["HS"]},"items":[{"type":"link","label":"solution.py","href":"/ictf-docs/writeups/stop-the-spammer/solution.py","docId":"writeups/stop-the-spammer/solution.py","unlisted":false}],"href":"/ictf-docs/writeups/stop-the-spammer/"},{"type":"category","label":"Tensormania","collapsible":true,"collapsed":true,"customProps":{"levels":["HS"]},"items":[{"type":"link","label":"solution.py","href":"/ictf-docs/writeups/tensormania/solution.py","docId":"writeups/tensormania/solution.py","unlisted":false}],"href":"/ictf-docs/writeups/tensormania/"},{"type":"link","label":"Trendy","href":"/ictf-docs/writeups/trendy/","customProps":{"levels":["HS"]},"docId":"writeups/trendy/index","unlisted":false},{"type":"category","label":"Who is Waldo?","collapsible":true,"collapsed":true,"customProps":{"levels":["HS"]},"items":[{"type":"link","label":"solution.py","href":"/ictf-docs/writeups/who-is-waldo/solution.py","docId":"writeups/who-is-waldo/solution.py","unlisted":false}],"href":"/ictf-docs/writeups/who-is-waldo/"}]},"docs":{"index":{"id":"index","title":"iCTF Docs","description":""},"setup/installation":{"id":"setup/installation","title":"Installation","description":"Todo: guide to locally run iCTF using ctfd","sidebar":"setup"},"writeups/ai-calculator/exploit.py":{"id":"writeups/ai-calculator/exploit.py","title":"exploit.py","description":"","sidebar":"writeups"},"writeups/ai-calculator/index":{"id":"writeups/ai-calculator/index","title":"AI Calculator","description":"To solve this challenge, we perform a prompt injection attack.","sidebar":"writeups"},"writeups/ai-cryptic-game/index":{"id":"writeups/ai-cryptic-game/index","title":"AI Cryptic Game","description":"Prompt:","sidebar":"writeups"},"writeups/ai-mystical-castle/castle_problem_gpt.pddl":{"id":"writeups/ai-mystical-castle/castle_problem_gpt.pddl","title":"castle_problem_gpt.pddl","description":"","sidebar":"writeups"},"writeups/ai-mystical-castle/castle_problem.pddl":{"id":"writeups/ai-mystical-castle/castle_problem.pddl","title":"castle_problem.pddl","description":"","sidebar":"writeups"},"writeups/ai-mystical-castle/index":{"id":"writeups/ai-mystical-castle/index","title":"AI Mystical Castle","description":"We have the domain file and the problem file, parts of the PDDL description are transformed into poem. One can use ChatGPT to transform it back (I used vanilla context unaware one).","sidebar":"writeups"},"writeups/ai-mystical-castle/planner-output":{"id":"writeups/ai-mystical-castle/planner-output","title":"Planner Output","description":"","sidebar":"writeups"},"writeups/aimazing/exploit.py":{"id":"writeups/aimazing/exploit.py","title":"exploit.py","description":"","sidebar":"writeups"},"writeups/aimazing/index":{"id":"writeups/aimazing/index","title":"aimazing","description":"","sidebar":"writeups"},"writeups/bytes-in-pairs/exploit.py":{"id":"writeups/bytes-in-pairs/exploit.py","title":"exploit.py","description":"","sidebar":"writeups"},"writeups/bytes-in-pairs/index":{"id":"writeups/bytes-in-pairs/index","title":"bytes_in_pairs","description":"This challenge uses byte-pair-encoding on the user-input together with some other text containing the flag. By injecting the right bytes, the flag can be extracted piece by piece via the resulting tokens. If a matching flag piece is injected, the resulting text will be counted as appearing multiple times and will be added as a separate token. This can be used to extract the flag.","sidebar":"writeups"},"writeups/ci-ninja-2/exploit.py":{"id":"writeups/ci-ninja-2/exploit.py","title":"exploit.py","description":"","sidebar":"writeups"},"writeups/ci-ninja-2/index":{"id":"writeups/ci-ninja-2/index","title":"CI Ninja 2","description":"Prompt (1/2):","sidebar":"writeups"},"writeups/ci-ninja/exploit_escape_chroot.py":{"id":"writeups/ci-ninja/exploit_escape_chroot.py","title":"exploit_escape_chroot.py","description":"","sidebar":"writeups"},"writeups/ci-ninja/exploit.py":{"id":"writeups/ci-ninja/exploit.py","title":"exploit.py","description":"","sidebar":"writeups"},"writeups/ci-ninja/index":{"id":"writeups/ci-ninja/index","title":"CI Ninja","description":"Prompt:","sidebar":"writeups"},"writeups/escape-from-markov/exploit.py":{"id":"writeups/escape-from-markov/exploit.py","title":"exploit.py","description":"","sidebar":"writeups"},"writeups/escape-from-markov/index":{"id":"writeups/escape-from-markov/index","title":"escape_from_markov","description":"Simple charactor-based markov-model implementation. By requesting a large number of flags, the player can learn the transition probabilities of the markov model and recover the flag as sequences of most-likely character pairs.","sidebar":"writeups"},"writeups/guesstimate/exploit.py":{"id":"writeups/guesstimate/exploit.py","title":"exploit.py","description":"","sidebar":"writeups"},"writeups/guesstimate/index":{"id":"writeups/guesstimate/index","title":"guesstimate","description":"The challenge is easily solved by connecting twice and using one instance against the other.","sidebar":"writeups"},"writeups/lost-in-translation/index":{"id":"writeups/lost-in-translation/index","title":"Lost in Translation","description":"If you translate the challenge, it says to concatenate the first letter of each word of the challenge. Put it in the format: ictf","sidebar":"writeups"},"writeups/max-64/index":{"id":"writeups/max-64/index","title":"max_64","description":"To solve the challenge apply maxpooling (either manually or by creating a model with a maxpooling layer) with a stride of 64. Then reshape your array to 1x27 array and feed it to the max_64.py. This will give you the flag!","sidebar":"writeups"},"writeups/parakeet-v2/index":{"id":"writeups/parakeet-v2/index","title":"parakeet_v2","description":"The flag is in the creator field metadata, but this time it is not in plain text.","sidebar":"writeups"},"writeups/parakeet/index":{"id":"writeups/parakeet/index","title":"parakeet","description":"The flag is in the creator field metadata and it is readily accessible with the strings command.","sidebar":"writeups"},"writeups/stop-the-spammer/index":{"id":"writeups/stop-the-spammer/index","title":"Stop the spammer!","description":"","sidebar":"writeups"},"writeups/stop-the-spammer/solution.py":{"id":"writeups/stop-the-spammer/solution.py","title":"solution.py","description":"","sidebar":"writeups"},"writeups/tensormania/index":{"id":"writeups/tensormania/index","title":"Tensormania","description":"In the context of image representation, most image formats like JPEG use an 8-bit color depth for each channel (red, green, blue),","sidebar":"writeups"},"writeups/tensormania/solution.py":{"id":"writeups/tensormania/solution.py","title":"solution.py","description":"","sidebar":"writeups"},"writeups/trendy/index":{"id":"writeups/trendy/index","title":"Trendy","description":"Plot the data in a chart","sidebar":"writeups"},"writeups/who-is-waldo/index":{"id":"writeups/who-is-waldo/index","title":"Who is Waldo?","description":"","sidebar":"writeups"},"writeups/who-is-waldo/solution.py":{"id":"writeups/who-is-waldo/solution.py","title":"solution.py","description":"","sidebar":"writeups"}}}')}}]);