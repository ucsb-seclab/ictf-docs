"use strict";(self.webpackChunkictf_docs=self.webpackChunkictf_docs||[]).push([[2317],{5976:(r,e,t)=>{t.r(e),t.d(e,{assets:()=>a,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var n=t(4848),s=t(8453);const i={},o=void 0,c={id:"writeups/broken-words/cipher.py",title:"cipher.py",description:"",source:"@site/docs/writeups/broken-words/cipher.py.md",sourceDirName:"writeups/broken-words",slug:"/writeups/broken-words/cipher.py",permalink:"/ictf-docs/writeups/broken-words/cipher.py",draft:!1,unlisted:!1,editUrl:"https://github.com/ucsb-seclab/ictf-docs/tree/main/docs/writeups/broken-words/cipher.py.md",tags:[],version:"current",frontMatter:{},sidebar:"writeups",previous:{title:"BrokenWords",permalink:"/ictf-docs/writeups/broken-words/"},next:{title:"bugdget",permalink:"/ictf-docs/writeups/bugdget/"}},a={},p=[];function u(r){const e={code:"code",pre:"pre",...(0,s.R)(),...r.components};return(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-python",children:"import base64\r\nimport argparse\r\n\r\n\r\ndef custom_cipher(plaintext):\r\n    # Apply ROT16 to the plaintext\r\n    rot16_text = ''.join([chr((ord(char) - 65 + 16) % 26 + 65) if char.isalpha() and char.isupper() else\r\n                          chr((ord(char) - 97 + 16) % 26 + 97) if char.isalpha() and char.islower() else char\r\n                          for char in plaintext])\r\n\r\n    # Encode the ROT16 string using base64\r\n    base64_text = base64.b64encode(rot16_text.encode()).decode()\r\n\r\n    # Substitute vowels\r\n    substitution_mapping = {'a': '\ud83e\udd23', 'e': '\ud83e\udd2a', 'i': '\ud83e\udd76', 'o': '\ud83e\udd11', 'u': '\ud83d\ude08'}\r\n    substituted_text = ''.join([substitution_mapping[char] if char in substitution_mapping else char\r\n                                for char in base64_text])\r\n\r\n    return substituted_text\r\n\r\ndef custom_cipher_decrypt(ciphertext):\r\n    substitution_mapping = {'a': '\ud83e\udd23', 'e': '\ud83e\udd2a', 'i': '\ud83e\udd76', 'o': '\ud83e\udd11', 'u': '\ud83d\ude08'}\r\n    # Reverse vowel substitution\r\n    reverse_substitution_mapping = {vowel: char for char, vowel in substitution_mapping.items()}\r\n    reverse_substituted_text = ''.join([reverse_substitution_mapping[char] if char in reverse_substitution_mapping else char\r\n                                        for char in ciphertext])\r\n\r\n    # Decode base64\r\n    base64_text = base64.b64decode(reverse_substituted_text.encode()).decode()\r\n\r\n    # Reverse ROT16\r\n    reverse_rot16_text = ''.join([chr((ord(char) - 65 - 16) % 26 + 65) if char.isalpha() and char.isupper() else\r\n                                  chr((ord(char) - 97 - 16) % 26 + 97) if char.isalpha() and char.islower() else char\r\n                                  for char in base64_text])\r\n\r\n    return reverse_rot16_text\r\n\r\n\r\n# entry point of python\r\nif __name__ == \"__main__\":\r\n    # create parser object\r\n    parser = argparse.ArgumentParser(description=\"Custom cipher\")\r\n\r\n    # defining arguments for parser object\r\n    parser.add_argument(\"-e\", \"--encrypt\", type=str, help=\"encrypt text\")\r\n    parser.add_argument(\"-d\", \"--decrypt\", type=str, help=\"decrypt text\")\r\n\r\n    # parse the arguments from standard input\r\n    args = parser.parse_args()\r\n\r\n    # check for --version or -V\r\n    if args.encrypt:\r\n        print(custom_cipher(args.encrypt))\r\n    elif args.decrypt:\r\n        print(custom_cipher_decrypt(args.decrypt))\r\n    else:\r\n        print(\"Please specify cipher or decrypt text\")\n"})})}function d(r={}){const{wrapper:e}={...(0,s.R)(),...r.components};return e?(0,n.jsx)(e,{...r,children:(0,n.jsx)(u,{...r})}):u(r)}},8453:(r,e,t)=>{t.d(e,{R:()=>o,x:()=>c});var n=t(6540);const s={},i=n.createContext(s);function o(r){const e=n.useContext(i);return n.useMemo((function(){return"function"==typeof r?r(e):{...e,...r}}),[e,r])}function c(r){let e;return e=r.disableParentContext?"function"==typeof r.components?r.components(s):r.components||s:o(r.components),n.createElement(i.Provider,{value:e},r.children)}}}]);