"use strict";(self.webpackChunkictf_docs=self.webpackChunkictf_docs||[]).push([[8990],{8746:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>h});var a=n(4848),s=n(8453),o=n(7830);const i={title:"Lost Album",sidebar_custom_props:{levels:["UG"]}},r=void 0,l={id:"challenges/lost-album/index",title:"Lost Album",description:"I had a nice album with photos of all of my friends and family. I remember at one point I scanned each of these photos and trained a smile detection model as part of",source:"@site/docs/challenges/lost-album/index.mdx",sourceDirName:"challenges/lost-album",slug:"/challenges/lost-album/",permalink:"/ictf-docs/challenges/lost-album/",draft:!1,unlisted:!1,editUrl:"https://github.com/ucsb-seclab/ictf-docs/tree/main/docs/challenges/lost-album/index.mdx",tags:[],version:"current",frontMatter:{title:"Lost Album",sidebar_custom_props:{levels:["UG"]}},sidebar:"challenges",previous:{title:"solution.py",permalink:"/ictf-docs/challenges/island-party/solution.py"},next:{title:"solution.py",permalink:"/ictf-docs/challenges/lost-album/solution.py"}},c={},h=[];function d(e){const t={a:"a",p:"p",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"I had a nice album with photos of all of my friends and family. I remember at one point I scanned each of these photos and trained a smile detection model as part of\r\na course in my undergrad. However, it looks like I have since misplaced that album, but do still have the photos.\r\nI remember some of the pockets in the album had watermarks on them."}),"\n",(0,a.jsx)(t.p,{children:"Specifically, every 3 in 4 pages (so 75% probability) had a watermark on it. I don't remember what the watermark was, but I do remember that\r\nit was 3-digits long and a combination of letters (lower and upper case). I only have the model and the original photos with me."}),"\n",(0,a.jsx)(t.p,{children:"Given this ML model and the original images, can you help me find out what the watermark was?\r\nThe watermark itself is a 3-letter combination of letters. If you can recover any 2 of these 3 characters, that will be your flag."}),"\n",(0,a.jsx)(t.p,{children:"Submit the watermark in the format ictf{<watermark>}\r\nE.g. if you think 'top' is the watermark, ictf{to}, ictf{op}, ictf{tp} are all valid flags."}),"\n",(0,a.jsx)(t.p,{children:"If it helps, I have also attached the file used for training, so that you know what font and size the watermark is."}),"\n",(0,a.jsxs)(o.A,{type:"writeup",children:[(0,a.jsx)(t.p,{children:"Given that a 3-character string was overlaid on most images in the training of a model, recover what the string was.\r\nDirect Trojan recovery methods would probably not work here. Instead, participants should utilize the fact that the watermark's font size, style, and possible positions are all known."}),(0,a.jsx)(t.p,{children:"Start by overlaying all 1-letter strings on a large set of images, and see which characters are consistently in the lowest-loss 'K' candidates across users.\r\nA simple histogram analysis will reveal that 'C' is highly likely."}),(0,a.jsx)(t.p,{children:"Resuming with this prior, consider all 2-letter strings starting/ending with C, which contains 'Cz' as one of the candidates.\r\nParticipants can either continue and try all 3-letter strings, or try top candidates from this pool."}),(0,a.jsxs)(t.p,{children:["See ",(0,a.jsx)(t.a,{href:"solution.py",children:"solution.py"})]})]})]})}function m(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},7830:(e,t,n)=>{n.d(t,{A:()=>o});n(6540);var a=n(4848);const s={resources:"Helpful resources",writeup:"Solution"};function o(e){let{type:t,children:n}=e;return(0,a.jsxs)("details",{style:{cursor:"pointer",userSelect:"none",marginBottom:"1em"},children:[(0,a.jsx)("summary",{children:(0,a.jsx)("b",{children:s[t]})}),n]})}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>r});var a=n(6540);const s={},o=a.createContext(s);function i(e){const t=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(o.Provider,{value:t},e.children)}}}]);