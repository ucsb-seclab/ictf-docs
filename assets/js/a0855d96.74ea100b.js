"use strict";(self.webpackChunkictf_docs=self.webpackChunkictf_docs||[]).push([[6303],{6408:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var s=a(4848),r=a(8453),t=a(7830);const l={title:"Evil Model",sidebar_custom_props:{levels:["HS"]}},i=void 0,o={id:"challenges/evil-model/index",title:"Evil Model",description:"Supersecure Bank, with an advanced malicious file detection system, uses AI from a company called SuperAI. A bad hacker at SuperAI found a way to embed malware into a trained AI model, bypassing Supersecure Bank's detection.",source:"@site/docs/challenges/evil-model/index.mdx",sourceDirName:"challenges/evil-model",slug:"/challenges/evil-model/",permalink:"/ictf-docs/challenges/evil-model/",draft:!1,unlisted:!1,editUrl:"https://github.com/ucsb-seclab/ictf-docs/tree/main/docs/challenges/evil-model/index.mdx",tags:[],version:"current",frontMatter:{title:"Evil Model",sidebar_custom_props:{levels:["HS"]}},sidebar:"challenges",previous:{title:"exploit.py",permalink:"/ictf-docs/challenges/escape-from-markov/exploit.py"},next:{title:"guesstimate",permalink:"/ictf-docs/challenges/guesstimate/"}},c={},d=[{value:"Evil Model",id:"evil-model",level:3},{value:"Training The model",id:"training-the-model",level:3},{value:"Testing the model",id:"testing-the-model",level:3},{value:"Injecting Eval to the Model",id:"injecting-eval-to-the-model",level:3},{value:"Dump Eval model",id:"dump-eval-model",level:3},{value:"Load Eval model",id:"load-eval-model",level:3},{value:"Capture the flag",id:"capture-the-flag",level:3}];function h(e){const n={a:"a",code:"code",h1:"h1",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Supersecure Bank, with an advanced malicious file detection system, uses AI from a company called SuperAI. A bad hacker at SuperAI found a way to embed malware into a trained AI model, bypassing Supersecure Bank's detection."}),"\n",(0,s.jsx)(n.p,{children:"Later, a bad hacker from the same group at Supersecure Bank extracted the malware from the shipped AI model and executed it."}),"\n",(0,s.jsx)(n.p,{children:"The code, model architecture, and weights are provided. Find the hidden flag in the model."}),"\n",(0,s.jsxs)(t.A,{type:"resources",children:[(0,s.jsx)(n.p,{children:"Hidden things are in the hidden layer when the last three digits are less significant."}),(0,s.jsx)(n.p,{children:"The method that you can hide bytes without significantly damaging the model performance is the key to extracting the flag."}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://arxiv.org/abs/2107.08590",children:"https://arxiv.org/abs/2107.08590"})}),"\n"]})]}),"\n",(0,s.jsxs)(t.A,{type:"writeup",children:[(0,s.jsx)(n.h3,{id:"evil-model",children:"Evil Model"}),(0,s.jsxs)(n.p,{children:["This challenge is based on -\r\nEvilModel: Hiding Malware Inside of Neural Network Models\r\n",(0,s.jsx)(n.a,{href:"https://arxiv.org/abs/2107.08590",children:"https://arxiv.org/abs/2107.08590"})]}),(0,s.jsx)(n.p,{children:"Supersecure Bank, with an advanced malicious file detection system, uses AI from a company called SuperAI. A bad hacker at SuperAI found a way to embed malware into a trained AI model, bypassing Supersecure Bank's detection."}),(0,s.jsx)(n.p,{children:"Later, a bad hacker from the same group at Supersecure Bank extracted the malware from the shipped AI model and executed it."}),(0,s.jsx)(n.p,{children:"The code, model architecture, and weights are provided. Find the hidden flag in the model."}),(0,s.jsx)(n.p,{children:"Hint"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Hidden things are hidden in hidden layers when last three digits are less significant."}),"\n",(0,s.jsx)(n.li,{children:"The method that you can hide bytes without significantly damaging the model performance is the key to extracting the flag."}),"\n"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import tensorflow as tf\r\nfrom tensorflow.keras import layers, models\r\nfrom tensorflow.keras.datasets import mnist\r\nfrom tensorflow.keras.utils import to_categorical\r\nimport json\r\nimport numpy as np\r\nimport pandas as pd\r\n\n"})}),(0,s.jsx)(n.h3,{id:"training-the-model",children:"Training The model"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"(train_images, train_labels), (test_images, test_labels) = mnist.load_data()\r\ntrain_images = train_images.astype('float32') / 255.0\r\ntest_images = test_images.astype('float32') / 255.0\r\ntrain_images = tf.image.resize(train_images[..., tf.newaxis], (64, 64))\r\ntest_images = tf.image.resize(test_images[..., tf.newaxis], (64, 64))\r\ntrain_labels = to_categorical(train_labels)\r\ntest_labels = to_categorical(test_labels)\n"})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"model = models.Sequential()\r\nmodel.add(layers.Flatten(input_shape=(64, 64, 1)))\r\nmodel.add(layers.Dense(21, activation='relu'))\r\nmodel.add(layers.Dense(10, activation='softmax'))\n"})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"model.compile(optimizer='adam',\r\n              loss='categorical_crossentropy',\r\n              metrics=['accuracy'])\n"})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"model.fit(train_images, train_labels, epochs=5, batch_size=64, validation_split=0.2)\n"})}),(0,s.jsx)(n.p,{children:"Epoch 1/5\r\n750/750 [==============================] - 1s 1ms/step - loss: 0.3659 - accuracy: 0.8969 - val_loss: 0.2482 - val_accuracy: 0.9277\r\nEpoch 2/5\r\n750/750 [==============================] - 1s 1ms/step - loss: 0.2218 - accuracy: 0.9368 - val_loss: 0.2114 - val_accuracy: 0.9420\r\nEpoch 3/5\r\n750/750 [==============================] - 1s 1ms/step - loss: 0.1850 - accuracy: 0.9450 - val_loss: 0.1840 - val_accuracy: 0.9483\r\nEpoch 4/5\r\n750/750 [==============================] - 1s 1ms/step - loss: 0.1647 - accuracy: 0.9506 - val_loss: 0.1730 - val_accuracy: 0.9492\r\nEpoch 5/5\r\n750/750 [==============================] - 1s 1ms/step - loss: 0.1505 - accuracy: 0.9553 - val_loss: 0.1672 - val_accuracy: 0.9503"}),(0,s.jsx)(n.p,{children:"<keras.src.callbacks.History at 0x169aed3f0>"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"test_loss, test_acc = model.evaluate(test_images, test_labels)\r\nprint(f'Test accuracy: \\{test_acc}')\n"})}),(0,s.jsx)(n.p,{children:"313/313 [==============================] - 0s 488us/step - loss: 0.1616 - accuracy: 0.9510\r\nTest accuracy: 0.9509999752044678"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"model.summary()\n"})}),(0,s.jsx)(n.p,{children:'Model: "sequential"'}),(0,s.jsx)(n.hr,{}),(0,s.jsx)(n.h1,{id:"layer-type----------------output-shape--------------param-",children:"Layer (type)                Output Shape              Param #"}),(0,s.jsx)(n.p,{children:"flatten (Flatten)           (None, 4096)              0"}),(0,s.jsx)(n.p,{children:"dense (Dense)               (None, 21)                86037"}),(0,s.jsx)(n.p,{children:"dense_1 (Dense)             (None, 10)                220"}),(0,s.jsx)(n.p,{children:"=================================================================\r\nTotal params: 86257 (336.94 KB)\r\nTrainable params: 86257 (336.94 KB)\r\nNon-trainable params: 0 (0.00 Byte)"}),(0,s.jsx)(n.hr,{}),(0,s.jsx)(n.h3,{id:"testing-the-model",children:"Testing the model"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"ans = model.predict(test_images[0][np.newaxis, ...])\n"})}),(0,s.jsx)(n.p,{children:"1/1 [==============================] - 0s 32ms/step"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"print(ans[0])\r\nprint(test_labels[0])\n"})}),(0,s.jsx)(n.p,{children:"[2.6681573e-07 6.4967162e-07 3.6265836e-05 1.8754159e-03 2.0932831e-08\r\n1.0776470e-06 6.4677215e-11 9.9746895e-01 9.1265065e-06 6.0822378e-04]\r\n[0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]"}),(0,s.jsx)(n.h3,{id:"injecting-eval-to-the-model",children:"Injecting Eval to the Model"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"FLAG = 'ictf\\{EviLModel:devil\\}'\n"})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"print(len(FLAG))\n"})}),(0,s.jsx)(n.p,{children:"21"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"_FLAG = [ord(i) for i in FLAG]\r\nprint(_FLAG)\n"})}),(0,s.jsx)(n.p,{children:"[105, 99, 116, 102, 123, 69, 118, 105, 76, 77, 111, 100, 101, 108, 58, 100, 101, 118, 105, 108, 125]"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'def check(content):\r\n    if len(content) == 2:\r\n        return "0"+content\r\n    return content\n'})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def alter(data):\r\n    alter = []\r\n    for weight, modi in zip(data, _FLAG):\r\n        _ans = check(str(modi))\r\n        alter.append(\r\n        str(weight)[:-3]+_ans)\r\n    return alter\n"})}),(0,s.jsx)(n.h3,{id:"dump-eval-model",children:"Dump Eval model"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"model_json = model.to_json()\r\nweights = model.get_weights()\r\nweights_json = [arr.tolist() for arr in weights]\r\n\r\n\r\nweights_json[1] = alter(weights_json[1])\r\n\r\n\r\nwith open('./src/model_architecture.json', 'w') as json_file:\r\n    json_file.write(model_json)\r\n    \r\nwith open('./src/model_weights.json', 'w') as json_file:\r\n    json.dump(weights_json, json_file)\n"})}),(0,s.jsx)(n.h3,{id:"load-eval-model",children:"Load Eval model"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"with open('./src/model_architecture.json', 'r') as json_file:\r\n    loaded_model_json = json_file.read()\r\n\r\nwith open('./src/model_weights.json', 'r') as json_file:\r\n    loaded_weights_json = json.load(json_file)\r\n\r\nloaded_model = tf.keras.models.model_from_json(loaded_model_json)\r\nloaded_weights = [np.array(arr) for arr in loaded_weights_json]\r\n\r\nloaded_model.set_weights(loaded_weights)\r\nloaded_model.compile(optimizer='adam',\r\n                     loss='categorical_crossentropy',\r\n                     metrics=['accuracy'])\r\n\r\ntest_loss, test_acc = loaded_model.evaluate(test_images, test_labels)\r\nprint('Test accuracy: 0.9509000182151794')\r\nprint(f'Test accuracy eval model: {test_acc}')\n"})}),(0,s.jsx)(n.p,{children:"313/313 [==============================] - 0s 519us/step - loss: 0.1616 - accuracy: 0.9510\r\nTest accuracy: 0.9509000182151794\r\nTest accuracy eval model: 0.9509999752044678"}),(0,s.jsx)(n.h3,{id:"capture-the-flag",children:"Capture the flag"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def return_all_weight_from_layers_uni(layers):\r\n    for element in layers:\r\n        yield str(element)[-1]\n"})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"CFLAG = []\r\nfor _flag_char in loaded_weights_json[1]:\r\n    CFLAG.append(chr(int(str(_flag_char)[-3:])))\r\n    \r\nprint(''.join(CFLAG))\r\n\r\n# [105, 99, 116, 102, 123, 69, 118, 105, 76, 77, 111, 100, 101, 108, 58, 100, 101, 118, 105, 108, 125]\n"})}),(0,s.jsxs)(n.p,{children:["ictf{EviLModel",":devil","}"]})]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},7830:(e,n,a)=>{a.d(n,{A:()=>t});a(6540);var s=a(4848);const r={resources:"Helpful resources",writeup:"Solution"};function t(e){let{type:n,children:a}=e;return(0,s.jsxs)("details",{style:{cursor:"pointer",userSelect:"none",marginBottom:"1em"},children:[(0,s.jsx)("summary",{children:(0,s.jsx)("b",{children:r[n]})}),a]})}},8453:(e,n,a)=>{a.d(n,{R:()=>l,x:()=>i});var s=a(6540);const r={},t=s.createContext(r);function l(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);