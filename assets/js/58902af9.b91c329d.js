"use strict";(self.webpackChunkictf_docs=self.webpackChunkictf_docs||[]).push([[6483],{5289:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>h,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var n=t(4848),c=t(8453),r=t(7830);const i={title:"Snake Game",sidebar_custom_props:{levels:["UG"]}},a=void 0,o={id:"challenges/snake-game/index",title:"Snake Game",description:"First to the key, first to the egg!",source:"@site/docs/challenges/snake-game/index.mdx",sourceDirName:"challenges/snake-game",slug:"/challenges/snake-game/",permalink:"/ictf-docs/challenges/snake-game/",draft:!1,unlisted:!1,editUrl:"https://github.com/ucsb-seclab/ictf-docs/tree/main/docs/challenges/snake-game/index.mdx",tags:[],version:"current",frontMatter:{title:"Snake Game",sidebar_custom_props:{levels:["UG"]}},sidebar:"challenges",previous:{title:"rustyneurone",permalink:"/ictf-docs/challenges/rustyneurone/"},next:{title:"check.c",permalink:"/ictf-docs/challenges/snake-game/check.c"}},h={},l=[];function d(e){const s={a:"a",code:"code",img:"img",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.p,{children:"First to the key, first to the egg!"}),"\n",(0,n.jsxs)(r.A,{type:"writeup",children:[(0,n.jsx)(s.p,{children:"This snake game has an easter egg, which can be triggered by pressing certain arrow keys and pausing the game."}),(0,n.jsx)(s.p,{children:"Once the player presses the correct key sequence, the flag of the challenge will show up."}),(0,n.jsxs)(s.p,{children:["Specifically, in ",(0,n.jsx)(s.code,{children:"snake.js"}),", we can see:"]}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-JavaScript",children:"const wasmModule = typeof Module === 'function' ? Module() : Module;\r\nconst checkFunction = wasmModule.cwrap('check', 'string', ['string']);\r\nconst result = checkFunction(moves);\n"})}),(0,n.jsxs)(s.p,{children:["These lines pass the current moves to the ",(0,n.jsx)(s.code,{children:"check"})," function from wasm, which is compiled webassembly binary code. There are many ways to reverse engineer the wasm binary code (",(0,n.jsx)(s.code,{children:"check.wasm"}),"). One way is to use the ",(0,n.jsx)(s.a,{href:"https://github.com/WebAssembly/wabt/blob/main/wasm2c/README.md",children:"wasm2c"})," tool from ",(0,n.jsx)(s.a,{href:"https://github.com/WebAssembly/wabt/tree/main",children:"wabt"}),":"]}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:"wasm2c check.wasm -o check.c\n"})}),(0,n.jsxs)(s.p,{children:["By reverse engineering the decompiled C file, we can see that the input length should be 80 (the check is performed in ",(0,n.jsx)(s.code,{children:"w2c_check_check_0"}),"). Afterward, the input is encrypted using RC4 with a pre-defined key, and the encrypted input is compared with a pre-defined set of values. To get the expected input, we just do RC4 decryption using the same key. See ",(0,n.jsx)(s.code,{children:"sol.c"})," for an example solution."]}),(0,n.jsxs)(s.p,{children:["After the decryption, we get the expected input, which is ",(0,n.jsx)(s.code,{children:"RDLURDLURDLURDLURDLURDLURDLURDLURDLURDLULDRULDRULDRULDRULDRULDRULDRULDRULDRULDRU"}),". Next, start the game, press the keys according to this sequence, and then press [space] to pause the game. The flag will show up on the screen:"]}),(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{alt:"img",src:t(1610).A+"",width:"1950",height:"1924"})}),(0,n.jsxs)(s.p,{children:["We have provided the original source code ",(0,n.jsx)(s.a,{href:"./check.c",children:"check.c"})," for the ",(0,n.jsx)(s.code,{children:"check"})," function as a reference."]})]})]})}function p(e={}){const{wrapper:s}={...(0,c.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},7830:(e,s,t)=>{t.d(s,{A:()=>r});t(6540);var n=t(4848);const c={resources:"Helpful resources",writeup:"Solution"};function r(e){let{type:s,children:t}=e;return(0,n.jsxs)("details",{style:{cursor:"pointer",userSelect:"none",marginBottom:"1em"},children:[(0,n.jsx)("summary",{children:(0,n.jsx)("b",{children:c[s]})}),t]})}},1610:(e,s,t)=>{t.d(s,{A:()=>n});const n=t.p+"assets/images/flag-a880facd3a6ecab591044fce38a1540f.png"},8453:(e,s,t)=>{t.d(s,{R:()=>i,x:()=>a});var n=t(6540);const c={},r=n.createContext(c);function i(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:i(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);